// This file is automatically generated. Do not modify it.
'use client';
import { useEffect } from 'react';
import { errorEmitter } from '@/firebase/error-emitter';

export function FirebaseErrorListener() {
  useEffect(() => {
    const handleError = (error: Error) => {
      // In a production environment, you would want to log this error to a service like Sentry or Google Analytics.
      // For this development environment, we will throw the error to be caught by the Next.js error overlay.
      throw error;
    };

    errorEmitter.on('permission-error', handleError);

    return () => {
      // Clean up the listener when the component unmounts
      // This is a placeholder as EventEmitter in Node.js doesn't directly support removing a specific listener without its reference.
      // In a real app, you might manage listeners more carefully if components that add them are frequently mounted/unmounted.
    };
  }, []);

  return null; // This component does not render anything
}
